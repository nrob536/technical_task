View(data.mbph)
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, longitude = decimalLongitude, latitude = decimalLatitude))
mbph <- cbind(mbph, lon_lat)
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, longitude = decimalLongitude, latitude = decimalLatitude))
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, longitude = decimalLongitude, latitude = decimalLatitude))
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude, decimalLatitude = latitude))
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude,decimalLatitude = latitude))%>%
select (var.names)
View(data.mbph)
View(Undaria.obis)
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude,decimalLatitude = latitude))%>%
select (var.names)
data.obis <- obis %>%
select (scientificName, decimalLongitude, decimalLatitude)%>%
mutate (source = "OBIS")
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
rename (c(longitude = decimalLongitude, latitude = decimalLatitude))
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
select(var.names)
data.obis <- obis %>%
select (var.names)%>%
mutate (source = "OBIS")
View(obis)
View(obis)
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
{gbif <- occ (query = 'Undaria pinnatifida',
from = 'gbif',
gbifopts = list(publishingCountry="NZ"))
gbif <- occ2df(gbif)}
obis <- occurrence("Undaria pinnatifida",
geometry = polygon)
mbph <- read.csv ("../data/Undaria_Porthole.csv", header = T)
lapply(list(gbif[1:3],obis[c(8,11,29)],mbph[c(12,6,7)]), head)
x_y <- mbph[,26:27]
lon_lat <- as.data.frame(project(x_y, proj4, inverse=T)) %>%
rename(c(longitude = x, latitude = y))
mbph <- cbind(mbph, lon_lat)
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude,decimalLatitude = latitude))%>%
select (var.names)
data.obis <- obis %>%
select (var.names)%>%
mutate (source = "OBIS")
data.obis <- obis %>%
select (var.names)%>%
mutate (source = "OBIS")
data.obis <- obis %>%
select (var.names)%>%
mutate (source = "OBIS")
col.names <- c("scientificName", "decimalLongitude", 'decimalLatitude', "source")
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
data.obis <- obis %>%
select (col.names)%>%
mutate (source = "OBIS")
data.obis <- obis %>%
mutate (source = "OBIS")%>%
select (col.names)
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
select(var.names)
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
select(var.names)
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
select(col.names)
View(gbif)
View(gbif)
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
rename (c(decimalLongitude = longitude,decimalLatitude = latitude))%>%
select(col.names)
Undaria.occ <- rbind(data.mbph, data.obis, data.gbif)
map_ggplot(Undaria.occ)
map_leaflet(Undaria.occ)
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
library(sdmpredictors)
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
layers <- list_layers(datasets)
load_layers(layers[layers$layer_code %in% c("BO_ph",
"BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",], datadir = tempdir())
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
layers <- list_layers(datasets)
load_layers(layers[layers$layer_code %in% c("BO_ph",
"BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",], datadir = "../data/bioOracle/")
env <- load_layers(layers[layers$layer_code %in% c("BO_ph",
"BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",], datadir = "../data/bioOracle/")
env.NZ <- raster::crop(env, extent(165,179,-47,-34))
env.NZ <- raster::crop(env, extent(165,179,-34, -47))
env.NZ <- raster::crop(env, extent(165,-34, 179,-47))
summary(env)
summary(env)
umma
plot(env$BO_dissox)
env.NZ <-raster::crop(env, extent(106e5,154e5, -52e5, -13e5))
clas(env)
class(env)
env <- load_layers(layers[layers$layer_code %in% c("BO_ph",
"BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",],
datadir = "../data/bioOracle/",
equalarea = T)
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
layers <- list_layers(datasets)
env <- load_layers(layers
[layers$layer_code %in%
c("BO_ph", "BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",],
datadir = "../data/bioOracle/",
equalarea =T)
env <- load_layers(layers
[layers$layer_code %in%
c("BO_ph", "BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean") &
layers$dataset_code == "Bio-ORACLE",],
datadir = "../data/bioOracle/")
e <- extent(165, 179, -47, -34)
library(raster)
e <- extent(165, 179, -47, -34)
plot(e)
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
env.NZ <-raster::crop(env, extent(e))
plot(env.nz)
env.nz <-raster::crop(env, extent(e))
plot(env.nz)
View(layers)
env <- load_layers(layers
[layers$layer_code %in%
c("BO_ph", "BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean",
"BO_bathymean") &
layers$dataset_code == "Bio-ORACLE",],
datadir = "../data/bioOracle/")
env.nz <-raster::crop(env, extent(e))
plot(env.nz)
datasets <- list_datasets(terrestrial = FALSE, marine = TRUE)
layers <- list_layers(datasets)
env <- load_layers(layers
[layers$layer_code %in%
c("BO_ph", "BO_dissox",
"BO_nitrate",
"BO_salinity",
"BO_sstmean",
"BO_bathymean") &
layers$dataset_code == "Bio-ORACLE",],
datadir = "../data/bioOracle/")
env.nz <-raster::crop(env, extent(e))
plot(env.nz)
{gbif <- occ (query = 'Undaria pinnatifida',
from = 'gbif',
gbifopts = list(publishingCountry="NZ"))
gbif <- occ2df(gbif)}
obis <- occurrence("Undaria pinnatifida",
geometry = polygon)
mbph <- read.csv ("../data/Undaria_Porthole.csv", header = T)
lapply(list(gbif[1:3],obis[c(8,11,29)],mbph[c(12,6,7)]), head)
col.names <- c("scientificName", "decimalLongitude", 'decimalLatitude', "source", "occ")
col.names <- c("scientificName", "decimalLongitude", 'decimalLatitude', "source")
x_y <- mbph[,26:27]
lon_lat <- as.data.frame(project(x_y, proj4, inverse=T)) %>%
rename(c(longitude = x, latitude = y))
x_y <- mbph[,26:27]
lon_lat <- as.data.frame(project(x_y, proj4, inverse=T)) %>%
rename(c(longitude = x, latitude = y))
library(proj4)
x_y <- mbph[,26:27]
View(x_y)
lon_lat <- as.data.frame(project(x_y, proj4, inverse=T)) %>%
rename(c(longitude = x, latitude = y))
lon_lat <- as.data.frame(proj4::project(x_y, proj4, inverse=T)) %>%
rename(c(longitude = x, latitude = y))
View(lon_lat)
mbph <- cbind(mbph, lon_lat)
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude, decimalLatitude = latitude))%>%
select (col.names)
library(dplyr)
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude, decimalLatitude = latitude))%>%
select (col.names)
data.mbph <- mbph %>%
mutate (source = "MBPH")%>%
rename (c(scientificName = taxon_name, decimalLongitude = longitude, decimalLatitude = latitude))%>%
dplyr::select (col.names)
data.obis <- obis %>%
mutate (source = "OBIS")%>%
select (col.names)
data.obis <- obis %>%
mutate (source = "OBIS")%>%
dplyr::select (col.names)
data.gbif <- gbif %>%
mutate (scientificName = "Undaria pinnatifida", source = "GBIF")%>%
rename (c(decimalLongitude = longitude,decimalLatitude = latitude))%>%
dplyr::select(col.names)
Undaria.occ <- rbind(data.mbph, data.obis, data.gbif)%>%
mutate(occ = 1)
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group)) +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat)) +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat), colour = 'grey40') +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group), colour = 'grey40') +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group), colour = 'grey90') +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group), colour = 'grey90') +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group), alpha = 0.8) +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
ggplot()+
geom_polygon(data = NZmap, aes(x = long, y= lat, group = group), alpha = 0.3) +
geom_point(data= Undaria.occ,
mapping = aes(x = decimalLongitude,
y = decimalLatitude),
colour = 'red')+
coord_sf (xlim = xlim, ylim = ylim)+
myTheme
myRespName1='Asian kelp'
myResp1=(as.numeric(Undaria.occ[,"occ"]))
myRespXY1=Undaria.occ[2:3]
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
library(biomod2)
m
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
class(env.nz)
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=rasterStack(env.nz),
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=rasterstack(env.nz),
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
myResp1=(as.numeric(Undaria.occ[,"occ"]))
class(env)
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
View(myRespXY1)
Undaria.occ <- rbind(data.mbph, data.obis, data.gbif)%>%
mutate(occ = 1)%>%
filter(!is.na())
View(Undaria.occ)
Undaria.occ <- rbind(data.mbph, data.obis, data.gbif)%>%
mutate(occ = 1)%>%
drop_na()
library(tidyverse)
Undaria.occ <- rbind(data.mbph, data.obis, data.gbif)%>%
mutate(occ = 1)%>%
drop_na()
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
myRespName1='Asian kelp'
myResp1=(as.numeric(Undaria.occ[,"occ"]))
myRespXY1=Undaria.occ[2:3]
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
raster(env.nz)
class(env.nz)
stack(env.nz)
# Formating the data #
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
class(env.nz)
stack(env.nz)
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
env.nz <-stack(raster::crop(env, extent(e)))
class(env.nz)
Data1=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
biomod.data
biomod.data=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 1000,
na.rm = T)
biomod.data
biomod.data=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 10000,
na.rm = T)
biomod.data
plot(Data1)
plot(biomod.data)
library(rasterVis)
install.packages("rasterVis")
library(rasterVis)
plot(biomod.data)
biomod.data=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 8000,
na.rm = T)
plot(biomod.data)
biomod.data=BIOMOD_FormatingData(resp.var = myResp1,
expl.var=env.nz,
resp.xy=myRespXY1,
resp.nam= 'Asian kelp',
PA.nb.rep = 1,
PA.strategy = 'sre',
PA.sre.quant = 0.025,
PA.nb.absences = 5000,
na.rm = T)
plot(biomod.data)
View(biomod.data)
biomod.data@data.env.var
biomod.data@PA.strategy
biomod.data@data.mask
plot(biomod.data@data.mask)
biomod.data
plot(env.nz)
install.packages("xaringan")
options(htmltools.dir.version = FALSE)
knitr::include_graphics('../figs/fig3-1.jpeg')
knit_with_parameters("C:/Users/robin/OneDrive/technical_task/slides/Technical_Task_part1.Rmd", encoding = "UTF-8")
knitr::include_graphics('../figs/fig3-1.jpeg')
knitr::include_graphics('../figs/sdms.png')
knitr::include_graphics('../figs/sdms.png')
```{r, out.width='60%', fig.align='center', fig.cap='...'}
knitr::include_graphics('../figs/3-7.jpeg')
knitr::include_graphics('../figs/fig3-7.jpeg')
knitr::opts_chunk$set(echo = FALSE)
source("../code/params.R")
knitr::include_graphics('../figs/fig4-3.jpeg')
knitr::include_graphics('../figs/fig4-3.png')
knitr::include_graphics('../figs/Undaria.jpg')
knitr::include_graphics('../figs/fig3-1.jpeg')
